{"ast":null,"code":"var _jsxFileName = \"/Users/akashsavanur/Desktop/working/Frontend/src/Pages/LLMPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Box, TextField, Button, Select, MenuItem, FormControl, InputLabel, Paper, CircularProgress, OutlinedInput, Chip } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LLMPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.files) || []);\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showCode, setShowCode] = useState(false);\n  const [responseId, setResponseId] = useState(null);\n  const sendFeedback = async feedback => {\n    await axios.post(\"http://localhost:8000/api/feedback\", {\n      id: responseId,\n      feedback\n    });\n    alert(\"Thanks for your feedback!\");\n  };\n  useEffect(() => {\n    fetchUploadedFiles();\n  }, []);\n  const fetchUploadedFiles = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/files\");\n      setUploadedFiles(res.data.files);\n    } catch (err) {\n      console.error(\"Error fetching file list:\", err);\n    }\n  };\n  const handleSubmit = async () => {\n    if (selectedFiles.length === 0 || !prompt) {\n      alert(\"Please select at least one file and enter a prompt.\");\n      return;\n    }\n    setLoading(true);\n    setResponse(null);\n    setResponseId(null);\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/query\", {\n        filenames: selectedFiles,\n        prompt: prompt\n      });\n      setResponse(res.data.response || \"No response received.\");\n      setResponseId(res.data.id); // ✅ Save the new prompt ID here\n    } catch (err) {\n      console.error(\"Query error:\", err);\n      setResponse(\"Error occurred while querying.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 3,\n    maxWidth: \"700px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Ask Questions (LLM)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Use AI to ask natural language questions about your uploaded data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"multi-file-label\",\n        children: \"Select File(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"multi-file-label\",\n        multiple: true,\n        value: selectedFiles,\n        onChange: e => setSelectedFiles(e.target.value),\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Select File(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 0.5\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this),\n        children: uploadedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: file,\n          children: file\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter your question or prompt\",\n      multiline: true,\n      minRows: 3,\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this),\n      onClick: handleSubmit,\n      disabled: loading,\n      sx: {\n        alignSelf: \"flex-start\"\n      },\n      children: \"Submit Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }, this), response && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        padding: 2,\n        backgroundColor: \"#f9f9f9\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 1,\n        children: typeof response === \"object\" ? typeof response.value === \"object\" ? Array.isArray(response.value) ? /*#__PURE__*/_jsxDEV(RenderArrayTable, {\n          data: response.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(RenderDictTable, {\n          data: response.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: response.value && response.value.includes(\"exports/charts/\") ? /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            sx: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://127.0.0.1:8000/exports/charts/${response.value}`,\n              alt: \"Chart\",\n              style: {\n                width: \"100%\",\n                maxWidth: \"600px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: response.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            whiteSpace: \"pre-wrap\"\n          },\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), typeof response === \"object\" && response.last_code_executed && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setShowCode(prev => !prev),\n          size: \"small\",\n          children: showCode ? \"Hide Code Executed\" : \"Show Code Executed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), showCode && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          sx: {\n            backgroundColor: \"#272822\",\n            color: \"#f8f8f2\",\n            padding: 2,\n            borderRadius: 1,\n            fontFamily: \"monospace\",\n            whiteSpace: \"pre-wrap\",\n            overflowX: \"auto\"\n          },\n          children: response.last_code_executed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), response && responseId && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"Was this response useful?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          onClick: () => sendFeedback(\"useful\"),\n          children: \"\\uD83D\\uDC4D Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          onClick: () => sendFeedback(\"not_useful\"),\n          children: \"\\uD83D\\uDC4E No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(LLMPage, \"M6deeRa3IzypVMZP12yqjEUSUS4=\", false, function () {\n  return [useLocation];\n});\n_c = LLMPage;\nexport default LLMPage;\nconst RenderDictTable = ({\n  data\n}) => {\n  if (!data || typeof data !== \"object\" || Object.keys(data).length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 12\n    }, this);\n  }\n  const columns = Object.keys(data);\n  if (!columns.length || !data[columns[0]]) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Invalid table data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 12\n    }, this);\n  }\n  const numRows = Object.keys(data[columns[0]]).length;\n  const rows = Array.from({\n    length: numRows\n  }, (_, rowIndex) => {\n    const row = {};\n    columns.forEach(col => {\n      var _data$col$rowIndex$to, _data$col;\n      row[col] = (_data$col$rowIndex$to = (_data$col = data[col]) === null || _data$col === void 0 ? void 0 : _data$col[rowIndex.toString()]) !== null && _data$col$rowIndex$to !== void 0 ? _data$col$rowIndex$to : \"N/A\";\n    });\n    return row;\n  });\n  return /*#__PURE__*/_jsxDEV(RenderArrayTable, {\n    data: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 10\n  }, this);\n};\n_c2 = RenderDictTable;\nconst RenderArrayTable = ({\n  data\n}) => {\n  if (!Array.isArray(data) || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No table data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 12\n    }, this);\n  }\n  const columns = Object.keys(data[0]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 2,\n    sx: {\n      overflowX: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              borderBottom: \"1px solid #ccc\",\n              textAlign: \"left\",\n              padding: \"8px\",\n              backgroundColor: \"#f0f0f0\"\n            },\n            children: col\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, cidx) => {\n            var _row$col;\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"8px\",\n                borderBottom: \"1px solid #eee\"\n              },\n              children: (_row$col = row[col]) !== null && _row$col !== void 0 ? _row$col : \"\"\n            }, cidx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this);\n          })\n        }, ridx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_c3 = RenderArrayTable;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LLMPage\");\n$RefreshReg$(_c2, \"RenderDictTable\");\n$RefreshReg$(_c3, \"RenderArrayTable\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","TextField","Button","Select","MenuItem","FormControl","InputLabel","Paper","CircularProgress","OutlinedInput","Chip","SendIcon","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","LLMPage","_s","_location$state","location","uploadedFiles","setUploadedFiles","selectedFiles","setSelectedFiles","state","files","prompt","setPrompt","response","setResponse","loading","setLoading","showCode","setShowCode","responseId","setResponseId","sendFeedback","feedback","post","id","alert","fetchUploadedFiles","res","get","data","err","console","error","handleSubmit","length","filenames","p","display","flexDirection","gap","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","labelId","multiple","value","onChange","e","target","input","label","renderValue","selected","sx","flexWrap","map","file","idx","multiline","minRows","endIcon","onClick","disabled","alignSelf","elevation","padding","backgroundColor","mt","Array","isArray","RenderArrayTable","RenderDictTable","includes","textAlign","src","alt","style","width","whiteSpace","last_code_executed","prev","size","color","borderRadius","fontFamily","overflowX","_c","Object","keys","columns","numRows","rows","from","_","rowIndex","row","forEach","col","_data$col$rowIndex$to","_data$col","toString","_c2","borderCollapse","borderBottom","ridx","cidx","_row$col","_c3","$RefreshReg$"],"sources":["/Users/akashsavanur/Desktop/working/Frontend/src/Pages/LLMPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Paper,\n  CircularProgress,\n  OutlinedInput,\n  Chip,\n} from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\n\nconst LLMPage = () => {\n  const location = useLocation();\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedFiles, setSelectedFiles] = useState(\n    location.state?.files || []\n  );\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showCode, setShowCode] = useState(false);\n  const [responseId, setResponseId] = useState(null);\n\n  const sendFeedback = async (feedback) => {\n    await axios.post(\"http://localhost:8000/api/feedback\", {\n      id: responseId,\n      feedback,\n    });\n    alert(\"Thanks for your feedback!\");\n  };\n\n  useEffect(() => {\n    fetchUploadedFiles();\n  }, []);\n\n  const fetchUploadedFiles = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8000/api/files\");\n      setUploadedFiles(res.data.files);\n    } catch (err) {\n      console.error(\"Error fetching file list:\", err);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (selectedFiles.length === 0 || !prompt) {\n      alert(\"Please select at least one file and enter a prompt.\");\n      return;\n    }\n\n    setLoading(true);\n    setResponse(null);\n    setResponseId(null);\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/query\", {\n        filenames: selectedFiles,\n        prompt: prompt,\n      });\n\n      setResponse(res.data.response || \"No response received.\");\n      setResponseId(res.data.id); // ✅ Save the new prompt ID here\n    } catch (err) {\n      console.error(\"Query error:\", err);\n      setResponse(\"Error occurred while querying.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box p={4} display=\"flex\" flexDirection=\"column\" gap={3} maxWidth=\"700px\">\n      <Typography variant=\"h4\">Ask Questions (LLM)</Typography>\n      <Typography variant=\"body1\">\n        Use AI to ask natural language questions about your uploaded data.\n      </Typography>\n\n      {/* Multi-select file dropdown */}\n      <FormControl fullWidth>\n        <InputLabel id=\"multi-file-label\">Select File(s)</InputLabel>\n        <Select\n          labelId=\"multi-file-label\"\n          multiple\n          value={selectedFiles}\n          onChange={(e) => setSelectedFiles(e.target.value)}\n          input={<OutlinedInput label=\"Select File(s)\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n        >\n          {uploadedFiles.map((file, idx) => (\n            <MenuItem key={idx} value={file}>\n              {file}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {/* Prompt input */}\n      <TextField\n        label=\"Enter your question or prompt\"\n        multiline\n        minRows={3}\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n        fullWidth\n      />\n\n      {/* Submit button */}\n      <Button\n        variant=\"contained\"\n        endIcon={<SendIcon />}\n        onClick={handleSubmit}\n        disabled={loading}\n        sx={{ alignSelf: \"flex-start\" }}\n      >\n        Submit Query\n      </Button>\n\n      {loading && <CircularProgress />}\n\n      {response && (\n        <Paper elevation={2} sx={{ padding: 2, backgroundColor: \"#f9f9f9\" }}>\n          <Typography variant=\"h6\">Response:</Typography>\n\n          {/* Response Display */}\n          <Box mt={1}>\n            {typeof response === \"object\" ? (\n              typeof response.value === \"object\" ? (\n                Array.isArray(response.value) ? (\n                  <RenderArrayTable data={response.value} />\n                ) : (\n                  <RenderDictTable data={response.value} />\n                )\n              ) : (\n                <>\n                  {/* If the response contains a chart image URL, render the image */}\n                  {response.value &&\n                  response.value.includes(\"exports/charts/\") ? (\n                    <Box mt={2} sx={{ textAlign: \"center\" }}>\n                      <img\n                        src={`http://127.0.0.1:8000/exports/charts/${response.value}`}\n                        alt=\"Chart\"\n                        style={{ width: \"100%\", maxWidth: \"600px\" }}\n                      />\n                    </Box>\n                  ) : (\n                    <Typography sx={{ whiteSpace: \"pre-wrap\" }}>\n                      {response.value}\n                    </Typography>\n                  )}\n                </>\n              )\n            ) : (\n              <Typography sx={{ whiteSpace: \"pre-wrap\" }}>\n                {response}\n              </Typography>\n            )}\n          </Box>\n\n          {/* Show Code Executed Toggle */}\n          {typeof response === \"object\" && response.last_code_executed && (\n            <Box mt={2}>\n              <Button\n                variant=\"text\"\n                onClick={() => setShowCode((prev) => !prev)}\n                size=\"small\"\n              >\n                {showCode ? \"Hide Code Executed\" : \"Show Code Executed\"}\n              </Button>\n\n              {showCode && (\n                <Box\n                  mt={1}\n                  sx={{\n                    backgroundColor: \"#272822\",\n                    color: \"#f8f8f2\",\n                    padding: 2,\n                    borderRadius: 1,\n                    fontFamily: \"monospace\",\n                    whiteSpace: \"pre-wrap\",\n                    overflowX: \"auto\",\n                  }}\n                >\n                  {response.last_code_executed}\n                </Box>\n              )}\n            </Box>\n          )}\n        </Paper>\n      )}\n      {response && responseId && (\n        <Box mt={2}>\n          <Typography variant=\"subtitle2\">Was this response useful?</Typography>\n          <Box display=\"flex\" gap={1} mt={1}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => sendFeedback(\"useful\")}\n            >\n              👍 Yes\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={() => sendFeedback(\"not_useful\")}\n            >\n              👎 No\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default LLMPage;\n\nconst RenderDictTable = ({ data }) => {\n  if (!data || typeof data !== \"object\" || Object.keys(data).length === 0) {\n    return <Typography>No data available.</Typography>;\n  }\n\n  const columns = Object.keys(data);\n\n  if (!columns.length || !data[columns[0]]) {\n    return <Typography>Invalid table data.</Typography>;\n  }\n\n  const numRows = Object.keys(data[columns[0]]).length;\n\n  const rows = Array.from({ length: numRows }, (_, rowIndex) => {\n    const row = {};\n    columns.forEach((col) => {\n      row[col] = data[col]?.[rowIndex.toString()] ?? \"N/A\";\n    });\n    return row;\n  });\n\n  return <RenderArrayTable data={rows} />;\n};\n\nconst RenderArrayTable = ({ data }) => {\n  if (!Array.isArray(data) || data.length === 0) {\n    return <Typography>No table data available.</Typography>;\n  }\n\n  const columns = Object.keys(data[0]);\n\n  return (\n    <Box mt={2} sx={{ overflowX: \"auto\" }}>\n      <table style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\n        <thead>\n          <tr>\n            {columns.map((col, idx) => (\n              <th\n                key={idx}\n                style={{\n                  borderBottom: \"1px solid #ccc\",\n                  textAlign: \"left\",\n                  padding: \"8px\",\n                  backgroundColor: \"#f0f0f0\",\n                }}\n              >\n                {col}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row, ridx) => (\n            <tr key={ridx}>\n              {columns.map((col, cidx) => (\n                <td\n                  key={cidx}\n                  style={{ padding: \"8px\", borderBottom: \"1px solid #eee\" }}\n                >\n                  {row[col] ?? \"\"}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}