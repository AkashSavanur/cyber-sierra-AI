{"ast":null,"code":"var _jsxFileName = \"/Users/akashsavanur/Desktop/cyber-sierra/src/Pages/UploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Typography, Box, Button, Select, MenuItem, InputLabel, FormControl, TextField, Paper } from \"@mui/material\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const fileInputRef = useRef(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [numRows, setNumRows] = useState(\"\");\n  const [previewData, setPreviewData] = useState(null); // Placeholder\n\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files);\n    const fileNames = files.map(file => file.name);\n    setUploadedFiles(prev => [...prev, ...fileNames]);\n    console.log(\"Uploaded files:\", files);\n    // Store or send to backend as needed\n  };\n  const handlePreview = () => {\n    if (!selectedFile || !numRows) {\n      alert(\"Please select a file and specify the number of rows.\");\n      return;\n    }\n    console.log(`Previewing top ${numRows} rows of ${selectedFile}`);\n    // In a real app, make API call here to get preview data\n    setPreviewData(`Showing top ${numRows} rows of ${selectedFile} (Mock Data)`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Upload one or more CSV or Excel files to start exploring with AI.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this),\n      onClick: () => fileInputRef.current.click(),\n      sx: {\n        maxWidth: \"300px\"\n      },\n      children: \"Upload CSV/XLS Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      multiple: true,\n      style: {\n        display: \"none\"\n      },\n      ref: fileInputRef,\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"file-select-label\",\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"file-select-label\",\n        value: selectedFile,\n        label: \"Select File\",\n        onChange: e => setSelectedFile(e.target.value),\n        children: uploadedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: file,\n          children: file\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Number of rows to display (N)\",\n      type: \"number\",\n      value: numRows,\n      onChange: e => setNumRows(e.target.value),\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), selectedFile && numRows && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handlePreview,\n      children: [\"Preview Top \", numRows, \" Rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), previewData && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        padding: 2,\n        backgroundColor: \"#f9f9f9\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: previewData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"0bIfjxJWoWTIak4TNUckB+oU/8U=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useRef","useState","Typography","Box","Button","Select","MenuItem","InputLabel","FormControl","TextField","Paper","UploadFileIcon","jsxDEV","_jsxDEV","UploadPage","_s","fileInputRef","uploadedFiles","setUploadedFiles","selectedFile","setSelectedFile","numRows","setNumRows","previewData","setPreviewData","handleFileChange","event","files","Array","from","target","fileNames","map","file","name","prev","console","log","handlePreview","alert","p","display","flexDirection","gap","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","current","click","sx","maxWidth","type","accept","multiple","style","ref","onChange","length","fullWidth","id","labelId","value","label","e","idx","elevation","padding","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/akashsavanur/Desktop/cyber-sierra/src/Pages/UploadPage.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  Typography,\n  Box,\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  TextField,\n  Paper,\n} from \"@mui/material\";\nimport UploadFileIcon from \"@mui/icons-material/UploadFile\";\n\nconst UploadPage = () => {\n  const fileInputRef = useRef(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [numRows, setNumRows] = useState(\"\");\n  const [previewData, setPreviewData] = useState(null); // Placeholder\n\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files);\n    const fileNames = files.map((file) => file.name);\n    setUploadedFiles((prev) => [...prev, ...fileNames]);\n    console.log(\"Uploaded files:\", files);\n    // Store or send to backend as needed\n  };\n\n  const handlePreview = () => {\n    if (!selectedFile || !numRows) {\n      alert(\"Please select a file and specify the number of rows.\");\n      return;\n    }\n\n    console.log(`Previewing top ${numRows} rows of ${selectedFile}`);\n    // In a real app, make API call here to get preview data\n    setPreviewData(`Showing top ${numRows} rows of ${selectedFile} (Mock Data)`);\n  };\n\n  return (\n    <Box p={4} display=\"flex\" flexDirection=\"column\" gap={3}>\n      <Typography variant=\"h4\">Upload Files</Typography>\n      <Typography variant=\"body1\">\n        Upload one or more CSV or Excel files to start exploring with AI.\n      </Typography>\n\n      <Button\n        variant=\"contained\"\n        startIcon = {<UploadFileIcon />}\n        onClick={() => fileInputRef.current.click()}\n        sx={{ maxWidth: \"300px\" }}\n\n      >\n        Upload CSV/XLS Files\n      </Button>\n      <input\n        type=\"file\"\n        accept=\".csv, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        multiple\n        style={{ display: \"none\" }}\n        ref={fileInputRef}\n        onChange={handleFileChange}\n      />\n\n      {uploadedFiles.length > 0 && (\n        <FormControl fullWidth>\n          <InputLabel id=\"file-select-label\">Select File</InputLabel>\n          <Select\n            labelId=\"file-select-label\"\n            value={selectedFile}\n            label=\"Select File\"\n            onChange={(e) => setSelectedFile(e.target.value)}\n          >\n            {uploadedFiles.map((file, idx) => (\n              <MenuItem key={idx} value={file}>\n                {file}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      )}\n\n      {selectedFile && (\n        <TextField\n          label=\"Number of rows to display (N)\"\n          type=\"number\"\n          value={numRows}\n          onChange={(e) => setNumRows(e.target.value)}\n          fullWidth\n        />\n      )}\n\n      {selectedFile && numRows && (\n        <Button variant=\"outlined\" onClick={handlePreview}>\n          Preview Top {numRows} Rows\n        </Button>\n      )}\n\n      {previewData && (\n        <Paper elevation={2} sx={{ padding: 2, backgroundColor: \"#f9f9f9\" }}>\n          <Typography variant=\"body2\">{previewData}</Typography>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}